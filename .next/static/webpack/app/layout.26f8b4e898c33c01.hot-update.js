"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/lib/socket.ts":
/*!***************************!*\
  !*** ./src/lib/socket.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   socketManager: function() { return /* binding */ socketManager; }\n/* harmony export */ });\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nclass SocketManager {\n    connect() {\n        let serverUrl = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : process.env.NEXT_PUBLIC_WS_SERVER_URL || \"http://localhost:3001\";\n        return new Promise((resolve, reject)=>{\n            try {\n                // Don't create a new connection if one already exists\n                if (this.socket && this.socket.connected) {\n                    console.log(\"Socket already connected\");\n                    resolve();\n                    return;\n                }\n                this.socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)(serverUrl, {\n                    transports: [\n                        \"websocket\",\n                        \"polling\"\n                    ],\n                    timeout: 30000,\n                    forceNew: false,\n                    reconnection: true,\n                    reconnectionDelay: 2000,\n                    reconnectionDelayMax: 10000,\n                    reconnectionAttempts: 10,\n                    maxReconnectionAttempts: 10,\n                    randomizationFactor: 0.5,\n                    autoConnect: true,\n                    upgrade: true,\n                    rememberUpgrade: true\n                });\n                this.socket.on(\"connect\", ()=>{\n                    console.log(\"Connected to server\");\n                    this.reconnectAttempts = 0;\n                    resolve();\n                });\n                this.socket.on(\"connect_error\", (error)=>{\n                    console.error(\"Connection error:\", error);\n                    reject(error);\n                });\n                this.socket.on(\"disconnect\", (reason)=>{\n                    console.log(\"Disconnected from server:\", reason);\n                    if (reason === \"io server disconnect\") {\n                        // Server disconnected, try to reconnect\n                        this.handleReconnect();\n                    }\n                });\n                this.socket.on(\"reconnect\", (attemptNumber)=>{\n                    console.log(\"Reconnected after\", attemptNumber, \"attempts\");\n                    this.reconnectAttempts = 0;\n                });\n                this.socket.on(\"reconnect_error\", (error)=>{\n                    console.error(\"Reconnection error:\", error);\n                    this.handleReconnect();\n                });\n                this.socket.on(\"reconnect_failed\", ()=>{\n                    console.error(\"Failed to reconnect after maximum attempts\");\n                });\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n    handleReconnect() {\n        if (this.reconnectAttempts < this.maxReconnectAttempts) {\n            this.reconnectAttempts++;\n            const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1);\n            console.log(\"Attempting to reconnect in \".concat(delay, \"ms (attempt \").concat(this.reconnectAttempts, \"/\").concat(this.maxReconnectAttempts, \")\"));\n            setTimeout(()=>{\n                if (this.socket) {\n                    this.socket.connect();\n                }\n            }, delay);\n        }\n    }\n    disconnect() {\n        if (this.socket) {\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    }\n    joinRoom(roomId, userName) {\n        if (!this.socket) {\n            throw new Error(\"Socket not connected\");\n        }\n        this.socket.emit(\"join-room\", {\n            roomId,\n            userName\n        });\n    }\n    sendVideoEvent(data) {\n        if (!this.socket) {\n            throw new Error(\"Socket not connected\");\n        }\n        this.socket.emit(\"video-event\", data);\n    }\n    sendChatMessage(roomId, message) {\n        if (!this.socket) {\n            throw new Error(\"Socket not connected\");\n        }\n        this.socket.emit(\"chat-message\", {\n            roomId,\n            message\n        });\n    }\n    on(event, callback) {\n        if (!this.socket) {\n            throw new Error(\"Socket not connected\");\n        }\n        this.socket.on(event, callback);\n    }\n    onAny(event, callback) {\n        if (!this.socket) {\n            throw new Error(\"Socket not connected\");\n        }\n        this.socket.on(event, callback);\n    }\n    off(event, callback) {\n        if (!this.socket) {\n            return;\n        }\n        if (callback) {\n            this.socket.off(event, callback);\n        } else {\n            this.socket.off(event);\n        }\n    }\n    offAny(event, callback) {\n        if (!this.socket) {\n            return;\n        }\n        if (callback) {\n            this.socket.off(event, callback);\n        } else {\n            this.socket.off(event);\n        }\n    }\n    get isConnected() {\n        var _this_socket;\n        return ((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.connected) || false;\n    }\n    get socketId() {\n        var _this_socket;\n        return ((_this_socket = this.socket) === null || _this_socket === void 0 ? void 0 : _this_socket.id) || null;\n    }\n    constructor(){\n        this.socket = null;\n        this.reconnectAttempts = 0;\n        this.maxReconnectAttempts = 5;\n        this.reconnectDelay = 1000;\n    }\n}\nconst socketManager = new SocketManager();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/socket.ts\n"));

/***/ })

});