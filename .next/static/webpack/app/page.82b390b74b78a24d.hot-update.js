"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/store/useAppStore.ts":
/*!**********************************!*\
  !*** ./src/store/useAppStore.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAppStore: function() { return /* binding */ useAppStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\nconst initialVideoPlayerState = {\n    isPlaying: false,\n    currentTime: 0,\n    duration: 0,\n    volume: 1,\n    playbackRate: 1,\n    isMuted: false,\n    isLoading: false,\n    hasError: false\n};\nconst initialState = {\n    // Connection state\n    isConnected: false,\n    isConnecting: false,\n    connectionError: null,\n    // Room state\n    currentRoom: null,\n    currentUser: null,\n    roomUsers: [],\n    isHost: false,\n    // Video state\n    videoFile: null,\n    videoUrl: null,\n    videoPlayerState: initialVideoPlayerState,\n    // Chat state\n    chatMessages: [],\n    isChatOpen: false,\n    // UI state\n    isFileSelectorOpen: false,\n    isRoomSelectorOpen: false\n};\nconst useAppStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.devtools)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        ...initialState,\n        // Connection actions\n        setConnectionState: function(isConnected) {\n            let isConnecting = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, error = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n            return set((state)=>({\n                    isConnected,\n                    isConnecting,\n                    connectionError: error\n                }));\n        },\n        // Room actions\n        setCurrentRoom: (roomId)=>set((state)=>({\n                    currentRoom: roomId\n                })),\n        setCurrentUser: (user)=>set((state)=>({\n                    currentUser: user\n                })),\n        setRoomUsers: (users)=>set((state)=>({\n                    roomUsers: users\n                })),\n        setIsHost: (isHost)=>set((state)=>({\n                    isHost\n                })),\n        addUser: (user)=>set((state)=>({\n                    roomUsers: [\n                        ...state.roomUsers,\n                        user\n                    ]\n                })),\n        removeUser: (userId)=>set((state)=>({\n                    roomUsers: state.roomUsers.filter((user)=>user.id !== userId)\n                })),\n        updateHost: (newHostId)=>set((state)=>{\n                var _state_currentUser;\n                return {\n                    roomUsers: state.roomUsers.map((user)=>({\n                            ...user,\n                            isHost: user.id === newHostId\n                        })),\n                    isHost: ((_state_currentUser = state.currentUser) === null || _state_currentUser === void 0 ? void 0 : _state_currentUser.id) === newHostId\n                };\n            }),\n        // Video actions\n        setVideoFile: (file)=>set((state)=>({\n                    videoFile: file\n                })),\n        setVideoUrl: (url)=>set((state)=>({\n                    videoUrl: url\n                })),\n        updateVideoPlayerState: (updates)=>set((state)=>{\n                const newState = {\n                    ...state.videoPlayerState,\n                    ...updates\n                };\n                console.log(\"Video player state updated:\", {\n                    old: state.videoPlayerState,\n                    updates,\n                    new: newState\n                });\n                return {\n                    videoPlayerState: newState\n                };\n            }),\n        resetVideoState: ()=>set((state)=>({\n                    videoFile: null,\n                    videoUrl: null,\n                    videoPlayerState: initialVideoPlayerState\n                })),\n        // Chat actions\n        addChatMessage: (message)=>set((state)=>({\n                    chatMessages: [\n                        ...state.chatMessages,\n                        message\n                    ]\n                })),\n        setChatMessages: (messages)=>set((state)=>({\n                    chatMessages: messages\n                })),\n        setIsChatOpen: (isOpen)=>set((state)=>({\n                    isChatOpen: isOpen\n                })),\n        // UI actions\n        setIsFileSelectorOpen: (isOpen)=>set((state)=>({\n                    isFileSelectorOpen: isOpen\n                })),\n        setIsRoomSelectorOpen: (isOpen)=>set((state)=>({\n                    isRoomSelectorOpen: isOpen\n                })),\n        // Reset actions\n        resetApp: ()=>set(initialState),\n        resetRoom: ()=>set((state)=>({\n                    currentRoom: null,\n                    currentUser: null,\n                    roomUsers: [],\n                    isHost: false,\n                    chatMessages: [],\n                    isChatOpen: false\n                }))\n    }), {\n    name: \"syncy-app-store\",\n    partialize: (state)=>({\n            // Only persist user preferences, not connection/room state\n            isChatOpen: state.isChatOpen\n        })\n}), {\n    name: \"syncy-app-store\"\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/useAppStore.ts\n"));

/***/ })

});